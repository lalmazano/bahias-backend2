/* ===================== USUARIO ===================== */ --ya
CREATE TABLE BAHIAS.USUARIO (
  ID_USER   NUMBER NOT NULL,
  USERNAME     VARCHAR2(50)  NOT NULL,
  NAME       VARCHAR2(100) NOT NULL,
  LASTNAME     VARCHAR2(100) NOT NULL,
  EMAIL        VARCHAR2(120),
  PASSWORD    VARCHAR2(255) NOT NULL,
  STATUS VARCHAR2(1), -- A: Activo, I: Inactivo
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,    -- Fecha de creación
  UPDATED_AT TIMESTAMP  
  );

ALTER TABLE BAHIAS.USUARIO 
  ADD CONSTRAINT PK_USUARIO PRIMARY KEY (ID_USER);
ALTER TABLE BAHIAS.USUARIO
  ADD CONSTRAINT UQ_USUARIO_USERNAME UNIQUE (USERNAME);
ALTER TABLE BAHIAS.USUARIO
  ADD CONSTRAINT UQ_USUARIO_EMAIL UNIQUE (EMAIL);

/* ===================== USUARIO_ROL ===================== */ --ya 
CREATE TABLE BAHIAS.USER_ROL (
    ID_USER NUMBER NOT NULL,                           -- ID del usuario
    ID_ROL NUMBER NOT NULL,                           -- ID del rol
    ASSIGNED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP   -- Fecha de asignación
);

ALTER TABLE BAHIAS.USER_ROL
  ADD CONSTRAINT PK_USUARIO_ROL PRIMARY KEY (ID_USER, ID_ROL);
ALTER TABLE BAHIAS.USER_ROL
  ADD CONSTRAINT FK_UR_USUARIO FOREIGN KEY (ID_USER) REFERENCES BAHIAS.USUARIO(ID_USER);
ALTER TABLE BAHIAS.USER_ROL
  ADD CONSTRAINT FK_UR_ROL FOREIGN KEY (ID_ROL) REFERENCES BAHIAS.ROL(ID_ROL);

/* ===================== ROL ===================== */ --ya
CREATE TABLE BAHIAS.ROL (
    ID_ROL NUMBER NOT NULL, -- ID único auto-incremental
    NAME VARCHAR2(50) NOT NULL,                 -- Nombre del rol (Admin, User, etc.)
    DESCRIPTION VARCHAR2(255),                         -- Descripción del rol
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,    -- Fecha de creación
    STATUS VARCHAR2(1) -- A: Activo, I: Inactivo
);

ALTER TABLE BAHIAS.ROL ADD CONSTRAINT PK_ROL PRIMARY KEY (ID_ROL);

/* ===================== ESTADO_BAHIA ===================== */-- terminada en la api
CREATE TABLE BAHIAS.ESTADO_BAHIA (
  ID_ESTADO     NUMBER,
  NOMBRE        VARCHAR2(60) NOT NULL,
  DESCRIPCION   VARCHAR2(200)
);

ALTER TABLE BAHIAS.ESTADO_BAHIA ADD CONSTRAINT PK_ESTADO_BAHIA PRIMARY KEY (ID_ESTADO);



/* ===================== UBICACION ===================== */ --ya 
CREATE TABLE BAHIAS.UBICACION (
  ID_UBICACION  NUMBER,
  NOMBRE        VARCHAR2(80) NOT NULL,
  DETALLE       VARCHAR2(200)
);

ALTER TABLE BAHIAS.UBICACION ADD CONSTRAINT PK_UBICACION PRIMARY KEY (ID_UBICACION);

/* ===================== BAHIA ===================== */ --ya
CREATE TABLE BAHIAS.BAHIA (
  ID_BAHIA       NUMBER,
  ID_UBICACION   NUMBER,
  ID_ESTADO      NUMBER NOT NULL,
  ID_RESERVA     NUMBER,
  FECHA_CREACION TIMESTAMP DEFAULT SYSTIMESTAMP
);

ALTER TABLE BAHIAS.BAHIA ADD CONSTRAINT PK_BAHIA PRIMARY KEY (ID_BAHIA);
ALTER TABLE BAHIAS.BAHIA
  ADD CONSTRAINT FK_BAHIA_UBICACION FOREIGN KEY (ID_UBICACION) REFERENCES BAHIAS.UBICACION(ID_UBICACION);
ALTER TABLE BAHIAS.BAHIA
  ADD CONSTRAINT FK_BAHIA_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES BAHIAS.ESTADO_BAHIA(ID_ESTADO);
ALTER TABLE BAHIAS.BAHIA
  ADD CONSTRAINT FK_BAHIA_RESERVA FOREIGN KEY (ID_RESERVA) REFERENCES BAHIAS.RESERVA(ID_RESERVA);

CREATE INDEX IX_BAHIA_UBIC   ON BAHIAS.BAHIA(ID_UBICACION);
CREATE INDEX IX_BAHIA_ESTADO ON BAHIAS.BAHIA(ID_ESTADO);

/* ===================== RESERVA ===================== */ --ya 
CREATE TABLE BAHIAS.RESERVA (
  ID_RESERVA   NUMBER NOT NULL,
  ID_USUARIO   NUMBER NOT NULL,
  INICIO_TS    TIMESTAMP NOT NULL,
  FIN_TS       TIMESTAMP NOT NULL,
  ID_VEHICULO  NUMBER,
  ESTADO       NUMBER(20) NOT NULL,
  OBSERVACION  VARCHAR2(300),
  CREADO_EN    TIMESTAMP DEFAULT SYSTIMESTAMP
);

ALTER TABLE BAHIAS.RESERVA ADD CONSTRAINT PK_RESERVA PRIMARY KEY (ID_RESERVA);
ALTER TABLE BAHIAS.RESERVA ADD CONSTRAINT CK_RES_FECHAS CHECK (FIN_TS > INICIO_TS);
ALTER TABLE BAHIAS.RESERVA
  ADD CONSTRAINT FK_RES_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES BAHIAS.USUARIO(ID_USER);


/* ===================== ESTADO RESERVA ===================== */ --ya
CREATE TABLE BAHIAS.ESTADO_RESERVA (
  ID_ESTADO     NUMBER,
  NOMBRE        VARCHAR2(60) NOT NULL,
  DESCRIPCION   VARCHAR2(200)
);

ALTER TABLE BAHIAS.ESTADO_RESERVA ADD CONSTRAINT PK_ESTADO_RESERVA PRIMARY KEY (ID_ESTADO);

/* ===================== HISTORIAL_BAHIA ===================== */ -- pendiente
CREATE TABLE BAHIAS.HISTORIAL_BAHIA (
  ID_HISTORIAL   NUMBER,
  ID_BAHIA       NUMBER NOT NULL,
  ESTADO_ANT     VARCHAR2(30),
  ESTADO_NUEVO   VARCHAR2(30),
  FECHA_CAMBIO   TIMESTAMP DEFAULT SYSTIMESTAMP,
  USUARIO_ACCION VARCHAR2(100)
);

ALTER TABLE BAHIAS.HISTORIAL_BAHIA ADD CONSTRAINT PK_HISTORIAL_BAHIA PRIMARY KEY (ID_HISTORIAL);
ALTER TABLE BAHIAS.HISTORIAL_BAHIA
  ADD CONSTRAINT FK_HIST_BAHIA FOREIGN KEY (ID_BAHIA) REFERENCES BAHIA(ID_BAHIA);

/* ===================== PARAMETRO ===================== */ --ya
CREATE TABLE BAHIAS.PARAMETRO (
  ID_PARAMETRO NUMBER,
  CLAVE        VARCHAR2(80) NOT NULL,
  VALOR        VARCHAR2(4000) NOT NULL,
  DESCRIPCION  VARCHAR2(200)
);

ALTER TABLE BAHIAS.PARAMETRO ADD CONSTRAINT PK_PARAMETRO PRIMARY KEY (ID_PARAMETRO);
ALTER TABLE BAHIAS.PARAMETRO ADD CONSTRAINT UQ_PARAMETRO_CLAVE UNIQUE (CLAVE);
/* ===================== REPORTE_EJECUCION ===================== */ --pendiente
CREATE TABLE REPORTE_EJECUCION (
  ID_REPORTE    NUMBER,
  GENERADO_POR  NUMBER,
  GENERADO_EN   TIMESTAMP DEFAULT SYSTIMESTAMP,
  OUTPUT_URL    VARCHAR2(400)
);

ALTER TABLE REPORTE_EJECUCION ADD CONSTRAINT PK_REPORTE PRIMARY KEY (ID_REPORTE);
ALTER TABLE REPORTE_EJECUCION
  ADD CONSTRAINT FK_REP_USER FOREIGN KEY (GENERADO_POR) REFERENCES USUARIO(ID_USUARIO);

/* ===================== VEHICULO ===================== */ --ya
CREATE TABLE BAHIAS.VEHICULO (
  ID_VEHICULO  NUMBER,
  PLACA        VARCHAR2(15)  NOT NULL,     -- matrícula
  MARCA        VARCHAR2(50),
  MODELO       VARCHAR2(50),
  COLOR        VARCHAR2(30),
  TIPO         NUMBER NOT NULL,               -- AUTO, MOTO, CAMIONETA, etc.
  ID_USUARIO   NUMBER,                     -- dueño/registrante (opcional)
  ACTIVO       CHAR(1) DEFAULT 'S' NOT NULL,
  CREADO_EN    TIMESTAMP DEFAULT SYSTIMESTAMP
);

ALTER TABLE BAHIAS.VEHICULO ADD CONSTRAINT PK_VEHICULO PRIMARY KEY (ID_VEHICULO);
ALTER TABLE BAHIAS.VEHICULO ADD CONSTRAINT UQ_VEHICULO_PLACA UNIQUE (PLACA,ID_USUARIO);
ALTER TABLE BAHIAS.VEHICULO ADD CONSTRAINT CK_VEHICULO_ACTIVO CHECK (ACTIVO IN ('S','N'));
ALTER TABLE BAHIAS.VEHICULO
  ADD CONSTRAINT FK_VEHICULO_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES BAHIAS.USUARIO(ID_USER);
ALTER TABLE BAHIAS.VEHICULO
  ADD CONSTRAINT FK_VEHICULO_TIPO FOREIGN KEY (TIPO) REFERENCES BAHIAS.TIPO_VEHICULO(ID_TIPO);

CREATE INDEX IX_VEHICULO_USUARIO ON BAHIAS.VEHICULO(ID_USUARIO);

/* ===================== TIPO VEHICULO ===================== */ --ya
CREATE TABLE BAHIAS.TIPO_VEHICULO (
  ID_TIPO      NUMBER,
  NOMBRE       VARCHAR2(50) NOT NULL,
  DESCRIPCION  VARCHAR2(200),
  ICON     VARCHAR2(100)
);

ALTER TABLE BAHIAS.TIPO_VEHICULO ADD CONSTRAINT PK_TIPO_VEHICULO PRIMARY KEY (ID_TIPO);
ALTER TABLE BAHIAS.TIPO_VEHICULO ADD CONSTRAINT UQ_TIPO_NOMBRE UNIQUE (NOMBRE);
